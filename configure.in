dnl
dnl Configure for SDPA-DD 7.1.8
dnl

AC_INIT(sdpa-dd, 7.1.8)
AM_INIT_AUTOMAKE
AC_PROG_CC
AC_PROG_CXX
AC_CANONICAL_HOST

AC_ARG_WITH(system-spooles,
[  --with-system-spooles      Use spooles already on system],
WITH_SYSTEM_SPOOLES=$withval, WITH_SYSTEM_SPOOLES=no)
AM_CONDITIONAL(BUILD_SPOOLES, test x$WITH_SYSTEM_SPOOLES = xno)

AC_ARG_WITH(spooles-includedir,
[  --with-spooles-includedir    Gives spooles include dir you use(e.g., /usr/local/include/spooles).],
SPOOLES_INCLUDEDIR=$withval
)

AC_ARG_WITH(spooles-libdir,
[  --with-spooles-libdir    Gives spooles lib dir you use(e.g., /usr/local/lib).],
SPOOLES_LIBDIR=$withval
)

AC_ARG_WITH(system-qd,
[  --with-system-qd      Use qd already on system],
WITH_SYSTEM_QD=$withval, WITH_SYSTEM_QD=no)
AM_CONDITIONAL(BUILD_QD, test x$WITH_SYSTEM_QD = xno)

AC_ARG_WITH(qd-includedir,
[  --with-qd-includedir    Gives qd include dir you use(e.g., /usr/local/include).],
QD_INCLUDEDIR=$withval
)

AC_ARG_WITH(qd-libdir,
[  --with-qd-libdir    Gives qd lib dir you use(e.g., /usr/local/lib).],
QD_LIBDIR=$withval
)

AC_ARG_WITH(system-mpack,
[  --with-system-mpack      Use mpack already on system],
WITH_SYSTEM_MPACK=$withval, WITH_SYSTEM_MPACK=no)
AM_CONDITIONAL(BUILD_MPACK, test x$WITH_SYSTEM_MPACK = xno)

AC_ARG_WITH(mpack-includedir,
[  --with-mpack-includedir    Gives mpack include dir you use(e.g., /usr/local/include).],
MPACK_INCLUDEDIR=$withval
)

AC_ARG_WITH(mpack-libdir,
[  --with-mpack-libdir    Gives mpack lib dir you use(e.g., /usr/local/lib).],
MPACK_LIBDIR=$withval
)

AC_ARG_ENABLE(shared,
[  --enable-shared       Enables shared link to the libraries (slower)
],,)

AC_ARG_ENABLE(sloppy_mul,
[  --enable-sloppy_mul      Enables sloppy mul (faster and less accurate)],
[case "${enableval}" in
    yes) enable_sloppy_mul=yes ;;
    no)  enable_sloppy_mul=no ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-sloppy_mul) ;;
        esac],[enable_sloppy_mul=no])
AM_CONDITIONAL(ENABLE_SLOPPY_MUL, test x$enable_sloppy_mul = xyes)

AC_ARG_ENABLE(cray_add,
[  --enable-cray_add      Enables cray style add (faster and less accurate)],
[case "${enableval}" in
    yes) enable_cray_add=yes ;;
    no)  enable_cray_add=no ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-cray_add) ;;
        esac],[enable_cray_add=no])
AM_CONDITIONAL(ENABLE_CRAY_ADD, test x$enable_cray_add = xyes)

AC_ARG_ENABLE(cuda,
[  --enable-cuda      Enables CUDA (C2050 and/or later) a lot faster!],
[case "${enableval}" in
    yes) enable_cuda=yes ;;
    no)  enable_cuda=no ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-cuda) ;;
        esac],[enable_cuda=yes])
AM_CONDITIONAL(ENABLE_CUDA, test x$enable_cuda = xyes)

AC_ARG_ENABLE(openmp,
[  --enable-openmp       Enables openmp
],WITH_OPENMP=yes)

AC_ARG_WITH(openmplib,
[  --with-openmplib    Gives openmplib],
OPENMPLIB=$withval
)

AC_ARG_WITH(openmpflag,
[  --with-openmpflag    Gives openmpflag],
OPENMPFLAG=$withval
)

AC_ARG_WITH(openmpthreads,
[  --with-openmpthread   Gives openmpthreads],
OPENMPTHREADS=$withval
)

dnl spooles requires -lm when linking.
LIBS="-lm"

IS_MINGW=0
case "$host" in
        *-mingw32*) # mingw
          IS_MINGW=1
        ;;
        *)
esac
AM_CONDITIONAL(IS_MINGW, test x$IS_MINGW = x1)

IS_MACOSX=0
case "$host" in
         *apple-darwin*) # MacOSX
          IS_MACOSX=1
        ;;
        *)
esac
AM_CONDITIONAL(IS_MACOSX, test x$IS_MACOSX = x1)

dnl How thread we link thread library esp. needed for spooles.
case "$host" in
        *-*-linux*|*-*-uclinux*)
            pthread_cflags="-D_REENTRANT"
            pthread_lib="-lpthread"
            ;;
        *-*-freebsd*|*-*-dragonfly*)
            pthread_cflags=""
            pthread_lib="-pthread"
            ;;
        *-apple-darwin*)
           enable_shared="yes"
        ;;
esac
LIBS="$LIBS $pthread_lib"
CXXFLAGS="$CXXFLAGS $pthread_cflags"
AC_SUBST(pthread_lib)

CFLAGS="$CFLAGS -O2 -funroll-all-loops"
CXXFLAGS="$CXXFLAGS -O2 -funroll-all-loops"
AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)

dnl some dummy settings
if test x$SPOOLES_INCLUDEDIR = x; then
SPOOLES_INCLUDEDIR="."
fi
if test x$SPOOLES_LIBDIR = x; then
SPOOLES_LIBDIR="."
fi

if test x$WITH_SYSTEM_SPOOLES != xno; then
  dnl Check for SPOOLES include and library files
  HAVE_SPOOLES_HEADER=""
  HAVE_SPOOLES=""
  save_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -I$SPOOLES_INCLUDEDIR"
  AC_CHECK_HEADER(SPOOLES.h, HAVE_SPOOLES_HEADER=yes)
  CPPFLAGS=$save_CPPFLAGS

  if test x$HAVE_SPOOLES_HEADER = xyes; then
    save_LDFLAGS="$LDFLAGS"
    LDFLAGS="$LDFLAGS -L$SPOOLES_LIBDIR"
    AC_CHECK_LIB(spooles, InpMtx_init, [SPOOLES_LIB="-lspooles"; HAVE_SPOOLES=yes])
    LDFLAGS=$save_LDFLAGS
  fi

  if test x$HAVE_SPOOLES != xyes; then
    echo "Please install SPOOLES"
    echo "SPOOLES http://www.netlib.org/linalg/spooles/spooles.2.2.html"
    AC_MSG_ERROR([No SPOOLES found])
  fi
else
SPOOLES_LIBDIR=`pwd`/external/i/SPOOLES/lib
SPOOLES_INCLUDEDIR=`pwd`/external/spooles/work/internal #just too messy
fi
AC_SUBST(SPOOLES_LIBDIR)
AC_SUBST(SPOOLES_INCLUDEDIR)

if test x$WITH_SYSTEM_QD != xno; then
  dnl Check for QD include and library files
  HAVE_QD_HEADER=""
  HAVE_QD=""
  save_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -I$QD_INCLUDEDIR"
  AC_CHECK_HEADER(qd/qd_real.h, HAVE_QD_HEADER=yes)
  CPPFLAGS=$save_CPPFLAGS

  if test x$HAVE_QD_HEADER = xyes; then
    save_LDFLAGS="$LDFLAGS"
    LDFLAGS="$LDFLAGS -L$QD_LIBDIR"
    AC_CHECK_LIB(qd, c_qd_sqrt, [QD_LIBS="-lqd"; HAVE_QD=yes])
    LDFLAGS=$save_LDFLAGS
  fi

  if test x$HAVE_QD != xyes; then
    echo "Please install QD"
    echo "You can download Double-Double and Quad-Double Arithmetic at http://crd.lbl.gov/~dhbailey/mpdist/"
    AC_MSG_ERROR([No QD found])
  fi
else
QD_LIBDIR=`pwd`/external/i/QD/lib
QD_INCLUDEDIR=`pwd`/external/i/QD/include
fi
AC_SUBST(QD_LIBDIR)
AC_SUBST(QD_INCLUDEDIR)

dnl openmp
if test -n "$enable_openmp" && test "$enable_openmp" != "no" && test "$WITH_OPENMP" = "yes"; then
OPENMPFLAGS="-fopenmp -DENABLE_OPENMP -DNUM_OF_THREADS=$OPENMPTHREADS"
OPENMPLIB=-lgomp
fi
AC_SUBST(OPENMPLIB)
AC_SUBST(OPENMPFLAGS)

dnl Check for MPACK include and library files
dnl some dummy settings
if test x$MPACK_INCLUDEDIR = x; then
MPACK_INCLUDEDIR="."
fi
if test x$MPACK_LIBDIR = x; then
MPACK_LIBDIR="."
fi

if test x$WITH_SYSTEM_MPACK != xno; then
HAVE_MPACK_HEADER=""
HAVE_MPACK=""
save_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS -I$MPACK_INCLUDEDIR"
AC_LANG_PUSH([C++])
AC_CHECK_HEADER(mblas_qd.h, HAVE_MPACK_HEADER=yes)
CPPFLAGS=$save_CPPFLAGS

if test x$HAVE_MPACK_HEADER = xyes; then
  save_LDFLAGS="$LDFLAGS"
  LDFLAGS="$LDFLAGS -L$MPACK_LIBDIR"
  LIBS="$LDFLAGS -L$MPACK_LIBDIR -lmlapack_dd -lmblas_dd -lqd";
 # AC_CHECK_FUNC(Rsyev, [HAVE_MPACK=yes])
  HAVE_MPACK=yes
  LDFLAGS=$save_LDFLAGS
fi

if test x$HAVE_MPACK != xyes; then
  echo "Please install MPACK (MBLAS/MLAPACK)"
  echo "MPACK (MBLAS/MLAPACK) http://mplapack.cvs.sourceforge.net/"
  AC_MSG_ERROR([No MPACK found])
fi
else
MPACK_LIBDIR=`pwd`/mpack
MPACK_INCLUDEDIR=`pwd`/mpack
fi
AM_CONDITIONAL(SYSTEM_MPACK, test x$with_system_mpack = xyes)
AC_SUBST(MPACK_LIBDIR)
AC_SUBST(MPACK_INCLUDEDIR)

AC_CONFIG_FILES([
external/Makefile
external/dummy/Makefile
external/spooles/Makefile
external/qd/Makefile
])

AC_OUTPUT(Makefile)
